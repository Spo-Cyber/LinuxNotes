		#Networking on Linux
___________________________________________________________________
-------------------------------------------------------------------
#Getting Information about the Network Interfaces(ip, ifconfig)

*If there is no net tools , run "sudo apt install net-tools".

- - - ifconfig - - - 
*ifconfig: Part of net-tools package has been there for a long time and is still used to configure display and control network interfaces by many Linux administrators.
ifconfig - to show only the information about "enabled" interfaces.
ifconfig -a - to display a list of all network interfaces and the associated IP address , both "enabled/disabled"
ifconfig InterfaceName - to display only the information about specific interface.
__
*The list(each section of interface) starts with interface names, predictable by Linux.
Interface name starting with "en" means Ethernet.
Interface name starting with "wl" means Wireless LAN.
Interface name "lo" means loopback address.
If Interface name contains "s"(slot number) , "p"(port number)
ifconfig displays neither the default gateway nor the DNS server.but 'route' command displays both.
__

- - - ip - - -
*ip: New alternative of ifconfig from Iproute2 package.

ip a/ip address show/ip a show/ip addr show - to display a list of all network interfaces and the associated IP address.can omit the 'show' command , because it's the default.
ip -4 address - to display only IPv4 addresses
ip -6 address - to display only IPv6 addresses
ip addr show dev InterfaceName - to display only the information about specific interface.
ip route show - displays the default gateway.

- - - route - - -
route - displays default gateway and DNS server.
route -n - displays names in numeric format.
'G' in 'Flags' column indicates that the line is displaying the default Gateway.

- - - resolvectl - - -
resolvectl status - to see the DNS servers used by the system.
_________________________________________________________________
-----------------------------------------------------------------
#Configuring the Network On The Fly(ifconfig, ip, route)

*To configure the network interfaces with (ifconfig/ip), we need to execute the commands as ROOT.

*!Do NOT run the following commands on a remote system to which are connected using ssh, since you are going to disable and enable interfaces, change IP addresses and so on, and your ssh connection will drop around.

*After restarting the system, the changes in network configurations won't be saved.To permanently save the configurations , we need to use a "netplan" for static network configuration.

- - - ifconfig - - -
*'Turn on/off the network interface'
ifconfig IntfName up - to enable the IntfName interface.
ifconfig IntfName down - to disable the IntfName interface.
__
*'Change the IP address'
ifconfig IntfName newIP up - to change the IP address.
__
*'Change the MAC address'
ifconfig Intface down -> ifconfig IntfName hw ether NewMAC -> ifconfig Intface up - to change the MAC address.so need to disable and then enable the interface.

- - - ip - - -
*'Turn on/off the network interface'
ip link set IntfName up - to enable the IntfName interface.
ip link set IntfName down - to disable the IntfName interface.
__
*'Change the IP address'
ip address del IPaddress dev IntfName - to delete the new IP address.
ip address add IPaddress dev IntfName - to add the new IP address.If there is an IP, the 'add' adds the new IP as secondary IP.So to set it as primary we need to delete the primary to have only one, which also will be displayed in 'ifconfig'.
__
*'Add/delete the default gateway'
ip route add default via IPaddress - to add a new default gateway.
ip route del default via IPaddress - to delete specific default gateway.
ip route del default - to delete default gateway.
__
*'Change the MAC address'
ip link set dev IntfName address NewMAC - to change the MAC address.

- - - route - - -
*'Add/delete the default gateway'
route add default gw IPaddress - to add new default gateway
route del default gw IP address - to delete default gateway

_________________________________________________________________
-----------------------------------------------------------------
#Setting Up Static IP(netplan)
- - - INFO NetworkManager - - -
'NetworkManager' is a service that manages network interfaces on a Linux system.
systemctl stop NetworkManager - stop network manager.
systemctl disable NetworkManager - disables network manager, even after restarting the system.
systemctl is-enabled NetworkManager - to check if is enabled.
The NetworkManager is mostly used on desktop machines while systemd-networkd is used on servers without a GUI.
- - -
The network interface can be managed either by network manager or by networkd, but not by both of them at the same time.

*Netplan is the default configuration tool to manage networks.It uses yaml files that are located in /etc/netplan.
Netplan supports 2 renderers or backend services to control network interfaces.They are NetworkManager and Systemd-networkd.
- - - - - - - - - - - - - - - - - - - - - - - - 
After stopping the NetworkManager, create a 'yaml' file in /etc/netplan (e.g. /01-netconfig.yaml).The text content in that file is:

'For manual IP and DNS addresses'
network:
	version: 2
	renderer: networkd 
	ethernets/wifis:
		IntfName:
			dhcp4: false
			access-points:
				"YourSSID":
				password: "yourpassword"
			addresses:
				- 192.168.0.20/24
			routes: 
				- to: default
				via: 192.168.1.1
			nameservers:
				addresses:
					- "8.8.8.8"
					- "8.8.4.4"

'OR for automatically IP and DNS addresses by DHCP server'
network:
	version: 2
	renderer: networkd 
	ethernets/wifis:
		IntfName:
			dhcp4: true


After changes run "netplan apply".
renderer: while written 'networkd' , netplan applies it as systemd-networkd automatically.
- - -
OR
- - -
With NetworkManager file -> sudo nano /etc/NetworkManager/system-connections/CONNECTION_NAME.nmconnection, type this.
[ipv4]
dns=8.8.8.8;1.1.1.1
ignore-auto-dns=true
_________________________________________________________________
-----------------------------------------------------------------
#Testing and Troubleshooting Network Connectivity

Ping works by sending ICMP echo request packets to the specified destination IP address and waits for a reply.When the destination receives an echo request packet, it will respond back with ICMP echo reply.Ping is also available on Mac and Windows , but with other options.
The domain name in ping execution can differ from the name we ping, because an IP address can be set to multiple different domain names.So ping performs a reverse DNS resolution , asking the DNS server configured on the system , "what is the domain of that IP".The DNS server responds back with the first domain that finds, which differs from our specified domain name.

ping [options] <destinationIP/domain name>
ping -n - To prevent ping from doing reverse DNS lookup.
ping -c N - To set the count of ICMP packets to be sent N times.
ping -i T - to set interval between each packet sending.by default it is 1s.Only superuser can send lower than 0.002s.
ping -q - display the summary only.

time=T ms(response time) -> time<30 means excellent, time=30-50 means average, time=50-100 means somehow slow and time>100 means slow response.
- - -
#Troubleshooting network connectivity with ping

*Step 1 
ping DefaultGatewayIP -> If not working, then maybe not connected to AP.If working go to step 2

*Step 2
ping DNS server-> If not working, then maybe router is not properly connected or there is an issue with router.If working go to step 3

*Step 3
ping stableIPAddress(e.g. google.com) -> if not working, then you have a DNS issue.Check that you are using the correct DNS server and there's nothing that's filtering the packets and so on.Probably there's a configuration error related to DNS on your site or maybe the DNS server is down.
___________________________________________________________________
--------------------------------------------------------------------
#SSH

- - - - - -
#Using SSH

The most useful network protocol used for the remote management of servers, routers, switches or other networking devices.
SSH involves client and server.The SSH client creates a secure connection to the SSH server on a remote machine, and then the connection will be used to execute commands on the server.

!It is better, before connecting with ssh, to check the network connection between the ssh client and the server using ping.
-
If not installed run "sudo apt install openssh-server openssh-client"
systemctl status ssh - to check if started or stopped.
systemctl is-enabled ssh - display enabled/disable (for boot)
systemctl start/stop ssh - to enable or disable.
-
ssh remoteLoginName@remoteIP - to connect to ssh server.
ssh -l remoteLoginName remoteIP - longer variant.
ssh -p N - to set another port number than the default (22).
-

When at first time connecting to ssh server of remote machine, the first thing displayed is RSA key fingerprint is SHA256:afsd2l234lkjl2kj23lASDFE9d/rrJB84rk something like this.Because the client uses a cryptographic fingerprint to identify the server and prevent possible MITM attacks in the future.
The "afsd2l234lkjl2kj23lASDFE9d/rrJB84rk" hostkey is randomly generated when the ssh server is set up and is used to identify the server you are connecting to.It will be saved on the client in a file "~/.ssh/known_hosts".
To quit ssh connection run "exit or ctrl+d".
The SSH client has its own configuration file "/etc/ssh/ssh_config"

- - INFO
To connect to metasploitable run  "ssh -o HostKeyAlgorithms=+ssh-rsa  msfadmin@IP". because it used old ssh service.To run ssh on metasploitable run "sudo /etc/init.d/ssh start".and can check it by "pgrep".

To run ssh server on windows , download PuTTY program from web.
- -

- - - - - -
#Troubleshooting SSH

- - 
* Problem 1
If you cannot connect to SSH server, the first thing you should do is to check that the SSH deamon (sshd) is running on the server machine.
systemctl status ssh - to see sshd status.
systemctl start ssh - to start sshd.
systemctl restart ssh - to restart sshd.
systemctl stop ssh - to stop sshd.
- -
* Problem 2
If you receive an error like "WARNING: REMOTE HOST  IDENTIFICATION HAS CHANGED!, IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!", then you should check that you are connecting to the right server.
This message can be displayed if, for example, the IP or MAC address of the server have changed.
If it's the right server, then you can prevent the message by removing the server key from the "~/.ssh/known_hosts" file.After this while connecting to ssh server of remote host, it will prompt again about RSA key fingerprint "yes/no/[fingerprint]".
- -
* Problem 3
If problem still exists , check if the Port 22 , on which the server listens , is open with "telnet or nmap".If telnet is not installed , run "sudo apt install telnet".
telnet IPaddress 22 - if runs , means that port 22 is open.
nmap IPaddress -p 22 - same with nmap tool.If shows down , then -> nmap IPaddress -p 22 -Pn
- -
* Problem 4
If the port is closed, but the ssh daemon is running on the server, then you should check if there isn't a firewall on the server, that's dropping the packets.
The Linux firewall is called "iptables" which is a command-line tool used to manage Netfilter(the actual firewall framework inside the Linux kernel) rules.
iptables -vnL - to check if there are any firewall rules.Check if the policy set to ACCEPT, and there are not any firewall rules about that.
-
The 'ufw' is uncomplicated user-friendly front-end program for iptables, used for managing netfilter firewall. 
An example that proofs that it's easier - "ufw allow ssh" equal to "iptables -A INPUT -p tcp -dport 22 -j ACCEPT".

sudo ufw status verbose - to check if it is.
sudo ufw enable/disable - to enable/disable it on system startup.
sudo ufw app list - to list all application profiles available on your server.
sudo ufw allow ssh - to configure ufw firewall to allow incoming ssh connections.
- -
* Problem 5
If there is not a firewall problem but you still cannot connect , then you can run the ssh client in verbose mode.
ssh -v login@IP - runs in verbose mode by , causing ssh to print debugging messages about its progress.
ssh -vv login@IP - more verbose.
- -
* Problem 6
If the problem still exists , check the server logs.
sudo tail -f /var/log/auth.log , and run ssh connection and watch the logs/problems in real time.
or newer alternative "journalctl -u ssh" command.

- - - - - -
#Securing SSH

The server configuration file of the ssh client is /etc/ssh/ssh_config (contains settings for how the client connects to SSH servers).
The server configuration file of the ssh daemon is /etc/ssh/sshd_config (determines how the SSH server handles incoming connections).
After doing changes in configuration file of ssh server you should restart the server to apply new changes.
It is safer for beginners to make a backup of configuration file, before changing it.
- - -
/etc/ssh/sshd_config
In this file the keywords are case-insensitive and arguments that contain spaces are to be enclosed in double quotes (").To override the default option, you have to uncomment that line and change the option.Not all available options of the ssh daemon are present in this file.
If you want to read more about what a specific option does, run "man sshd_config".

* STEP 1
Use non-standard port for the server to avoid being seen by attackers by casual scans, but not by targeted attacks.

* STEP 2
 One of the most dangerous security holes that can be in your system is to allow direct login as root through SSH.No matter how strong the root password is , there's always the possibility that the hacker can find the password using a brute-force attack.
 "PermitRootLogin prohibit-password" key is disabled by default, but you should check it anyway.prohibit-password means, that the root can login directly using another authentication method, not the password.Change it to 'no'. -> PermitRootLogin no.
 
 * STEP 3
 Disable password authentication entirely, if possible and enable public key authentication.
 If it's not possible to disable password on the server , then use strong password(random password with a length of at least 10 characters consisting of letters, digits, and special characters!).
 Do not use dictionary words or combinations of such words, no matter the language.
 
 * STEP 4
 Limit users' ssh access.By default all system users can log in via SSH using their password or public key even if there are only a few administrator users that really need to access the system remotely.
 AllowUsers username1 username2 username3 - to permit only specific users by their usernames.
 
 * STEP 5
 Filter SSH access at the firewall level.If there are only a few admins that use SSH for remote management , then accept connection to the SSH port only from a limited list of source IP addresses(whitelist).These will be the source IP addresses from where the admin will connect, stay home and work.Permit an entire network , if the source IP changes or is dynamic.
 iptables -A INPUT -p tcp --dport yourSSHport -s permittingIPaddress1 -j ACCEPT
 iptables -A INPUT -p tcp --dport yourSSHport -s permittingIPaddress2 -j ACCEPT
 iptables -A INPUT -p tcp --dport yourSSHport -j DROP
 Now , only the SSH connections coming from these two IP addresses will be permitted.If you want to allow an entire network, use the network address instead of the IP address!
 
 * STEP 6
 Set the ClientAliveInterval value to N seconds and ClientAliveCountMax to 0, to automatically close the SSH connection if a client won't send any packet in N timeout interval.
 
 * STEP 7
 MaxAuthTries N - to specify the maximum number of authentication attempts permitted per connection.
 
 * STEP 8
 LoginGraceTime N - The server disconnects after this time if the user has not successfully logged in.
 
 * STEP 9 
MaxStartups N - controls the number of unauthenticated concurrent SSH connections allowed before sshd starts dropping connection attempts.This prevents DoS attacks caused by excessive SSH connection attempts.

 * STEP 10
 Use the latest version of OpenSSH
 - - - - - -
 #Copying files over the network (scp)
 
 scp - is part of the openssh client package.The scp command can be used in three different ways:
 1) To copy from your computer to a remote server
 2) To copy from a remote server to your computer
 3) To copy from a remote server to another remote server
!Before the running the scp command , check that you have ssh access to the remote ssh server you'll copy the files to or from.
 -
*To be able to copy files, the user that runs the scp command must have the read permission on the source file and the user that authenticates.Scp command overwrites files without any warning.
1)Your computer -> remote server
scp -P 22 ip.txt remoteLogin@192.168.1.6:~/path => P(specifies the port on which the server is listening), ip.txt (file which should be copied), last part(indicates the destination, by username IP and destination location of file)
scp -r -P 22 mydir/ mrhacker@192.168.1.6:~ => to send directory
scp -p ... - to save the access and modification times.
 -
 2)Remote server -> your computer
 scp remoteLogin@remoteIP:/fileLocation /home/destinationForFile - for file
 scp -r remoteLogin@remoteIP:/fileLocation /home/destinationForFile - for directory
 -
 3)Remote server -> remote server
 *You need to have access to both systems from the machine on which you execute the scp command. 
 scp user1@IP1:/path_to_sourcefile user2@IP2:/path_to_destination
 - - -
 FileZilla - cross-platform software GUI for SFTP protocol which runs over ssh.
____________________________________________________________________
--------------------------------------------------------------------
#Synchronizing Files and Directories using rsync

rsync: A fast and versatile utility that synchronizes files and directories between two locations that can be local or remote.Has tons of options.
The user that runs the rsync command must have read permissions on the source location and write permissions on the destination(directory) location.
-
rsync -av /sourcelocation /destinationlocation - this transfers directory with its files in archive mode, which ensures that symbolic links, devices, attributes, permissions, ownerships, etc. are preserved in the transfer. v(verbose mode), a(archive mode).If the destination directory doesn't exist , it will create it.
*Rsync doesn't work like cp command , because it finds files that need to be transferred using a quick check algorithm which looks for files that have changed in size or in last modified time or if there are added files but not deleted(it doesn't remove the files that was deleted from source location after the last transfer).Since no file was changed, rsync does nothing.This is more efficient than cp command, which would copy each file again.
*Rsync gives different treatment to the source directories with a trailing slash"/" (e.g. /etc is not equal to /etc/).If you add a '/' to the source directory name, it will copy only the contents of that directory to the destination directory.But if not to add '/', it will copy the source directory itself inside the destination directory with its contents.
-
rsync -aq - q(quiet) instead of v(verbose)
-
rsync --delete - to delete the additional files which were deleted after the last transfer from source location.which doesn't do common rsync command.This is useful for mirroring , when we want to have two directories only with same content always.
 -
 To exclude some files and directories while using rsync , at first make a txt file and within the file type on each line the names of files or directories which should be excluded (e.g. movie.mkv then dir1/ then *.png).
 rsync -av --exclude-from='excludingfilepath' /sourcelocation/  /destination - this will take the excludingfilepath content(which we wrote for excluding that type of files) as pattern and will exclude all the files and directories that match with the pattern of excludingfilepath.
 -
 rsync --exclude='patternorfilename' - quickly does the same as the command below , by typing the pattern immediately within the quotes.For example (rsync -av --exclude='*.png' /source /destination).
And to specify multiple patterns , you should specify multiple --exclude options.For example (rsync -av --exclude='*.png' --exclude='dir1/' /source /destination).

- - - - - -
#Using Rsync Over The Network

Rsync is also used to synchronize local directories to a remote system(if you have SSH access to that system).This is the best and first option , if you want to mirror the backup from a remote system.
The user that runs the rsync command should have read access to each file on the source location , and the user that connects to the remote server should have write access on the destination.

rsync -av -e ssh /sourcelocation/ remotelogin@remoteIP:destination/ - transfer from your machine to remote system(the syntax is similar to scp command).This uses the default ssh options, but to specify some options e.g. port number , then type it after -e within quotes => rsync -av -e 'ssh -p 2505 ..'.
And to transfer from remote system to my machine => change the source and destination places below(like in scp).
_________________________________________________________________
--------------------------------------------------------------------
#Using wget

wget - is a GNU command line utility for downloading files from HTTP, HTTPS and FTP servers.
It provides a number of options, allowing you to download multiple files, resume downloads, limit the bandwidth, mirror a website, etc..
wget URL - to download the content of that URL link into the current directory.
wget -P /destination URL  - to download the content into the specified directory.if the destination directory doesn't exist , it creates that automatically.
wget --limit-rate=Nk - to set the bandwidth of download rate to N (k(kilobytes),M(Megabytes)) per second.if the N exceeds the maximum bandwidth of your network download speed, then it will use the maximum of your network download speed.
wget -c URL - to continue the download that was interrupted(stopped).
wget -i urls.txt - to download multiple links. urls.txt(a txt file , in which , there are written multiple URLS)
wget -b URL - to download in the background.it writes the process of download in the wget-log file in current directory.

wget --mirror --convert-links --adjust-extension --page-requisites --no-parent http://example.org
--mirror (makes the download recursively)
--convert-links (converts all the links 'including CSS stylesheets' to relative paths, so they will be suitable for offline viewing)
--adjust-extension (will add suitable extensions to the file names, such as html or css depending on their content type)
--page-requisites (will also download things like CSS style-sheets and images to properly display the page offline.
--no-parent (not to ascend parent directory as well.It's useful to restrict the download to only a part of the site)

_________________________________________________________________
--------------------------------------------------------------------
#Checking for Listening Ports (netstat, ss, lsof, telnet, nmap)

SCANNING OPEN PORTS ON LOCAL HOST

When troubleshooting network connectivity issues, one of the first things you should do is to check if the server application is listening on a specific port on the machine.
netstat, ss and lsof are used to display open ports on the current system(localhost).

- - - netstat
netstat -tupan = -t(shows tcp ports), -u(shows udp ports), -p(shows PID and the name of the program which is listening), -a(shows all ports both listening and not listening), n(shows numerical addresses instead of trying to determine symbolic host and port names).
In the 'Local Address' column , if you see 0.0.0.0 as an IP address, it means that the process is listening on all IP addresses of the host.And ::: are in fact IPv6 addresses.

It's common to check if a specific port is open by filtering the output using grep command. netstat -tupan | grep :22 
- -
- - - ss
ss (socket statistics) - shows the information similar to netstat.It can display more TCP and UDP port state information and it is faster than netstat.Options are similar to netstat => ss -tupan
- -
- - - lsof
lsof (list open files) - To get a list of all the files that are opened by any process in the system.
lsof -u username - To get all the files opened by specific user.
lsof -u ^username - ^(negation) so this means to get list of files not opened by specific user.
lsof -c processname - to list all the files opened by specific process.

sudo lsof -iTCP -sTCP:LISTEN = shows only the files that opened tcp ports which are in the LISTEN state.Can add -nP option to see both ports and hostnames in numeric format.
sudo lsof -iTCP:22 -sTCP:LISTEN = shows which file opened the specific(22) port.
- -

- - - - - -
#SCANNING OPEN PORTS ON REMOTE SYSTEM

To scan open ports on remote machine, you can use 'telnet' or a professional port scanner like 'nmap'.
-
telnet remoteIP portNumber - For example (telnet google.com 443)
-
sudo nmap remoteIP - To scan all open ports on remote system.
sudo nmap -p N remoteIP  - to scan a specific port on remote system.
sudo nmap -sV remoteIP -  to see also its version.
sudo nmap -sS remoteIP - SYN scan.it doesn't complete the full TCP  three-way handshake and instead sends a SYN packet and waits for a response.If a port is open , the target responds with SYN/ACK, and nmap then immediately sends an RST(reset) packet to tear down the connection before it completes. 
sudo nmap -sT remoteIP - connect scan.nmap sends a SYN packet to the target port, and if the port is open , it reponsds with SYN/ACK .Then nmap sends an ACK to establish the connection.nmap then closes the connection with an RST packet.
sudo nmap -p- remoteIP - to scan all ports.
sudo nmap -p 80 -iL hosts.txt - to scan the IPs/domainnames which are separated by new lines or a whitespaces within hosts.txt file.
- - - - - - - - - - - 
