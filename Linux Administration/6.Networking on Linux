		#Networking on Linux
_________________________________________________________________
-----------------------------------------------------------------
#Getting Information about the Network Interfaces(ip, ipconfig)

*If there are not net tools , run "sudo apt install net-tools".

- - -
*ifconfig: Part of net-tools package has been there for a long time and is still used to configure display and control network interfaces by many Linux administrators.
ifconfig - to show only the information about "enabled" interfaces.
ifconfig -a - to display a list of all network interfaces and the associated IP address , both "enabled/disabled"
ifconfig InterfaceName - to display only the information about specific interface.
__
*The list(each section of interface) starts with interface names, predictable by linux.
Interface name starting with "en" means Ethernet.
Interface name starting with "wl" means Wireless LAN.
Interface name "lo" means loopback address.
If Interface name contains "s"(slot number) , "p"(port number)
ifconfig displays neither the default gateway nor the DNS server.but 'route' command displays both.
__

- - -
*ip: New alternative of ifconfig from Iproute2 package.

ip a/ip address show/ip a show/ip addr show - to display a list of all network interfaces and the associated IP address.can omit the 'show' command , because it's the default.
ip -4 address - to display only IPv4 addresses
ip -6 address - to display only IPv6 addresses  
ip addr show dev InterfaceName - to display only the information about specific interface.
ip route show - displays the default gateway.

- - -
route - displays default gateway and DNS server.
route -n - displays names in numeric format.
__
'G' in 'Flags' column indicates that the line is displaying the default Gateway.

- - -
resolvectl status - to see the DNS servers used by the system.

_________________________________________________________________
-----------------------------------------------------------------
#Configuring the Network On The Fly(ipconfig, ip, route)

*To configure the network interfaces with (ifconfig/ip), we need to execute the commands as ROOT.

*!Do NOT run the following commands on a remote system to which are connected using ssh, since you are going to disable and enable interfaces, change IP addresses and so on, and you ssh connection will drop around.

*After restarting the system, the changes in network configurations won't be saved.To permanently save the configurations , we need to use a "netplan" for static configuration of network.

- - -
*'Turn on/off the network interface'
ifconfig IntfName up - to enable the IntfName interface.
ifconfig IntfName down - to disable the IntfName interface.
__
*'Change the IP address'
ifconfig IntfName newIP up - to change the IP address.
__
*'Change the MAC address'
ifconfig Intface down -> ifconfig IntfName hw ether NewMAC -> ifconfig Intface up - to change the MAC address.so need to disable and then enable the interface.

- - -
*'Turn on/off the network interface'
ip link set IntfName up - to enable the IntfName interface.
ip link set IntfName down - to disable the IntfName interface.
__
*'Change the IP address'
ip address del IPaddress dev IntfName - to delete the new IP address.
ip address add IPaddress dev IntfName - to add the new IP address.If there is an IP, the 'add' adds the new IP as secondary IP.So to set it as primary we need to 'del'ete the primary to have only one, which also will be displayed in 'ifconfig'.
__
*'Add/delete the default gateway'
ip route add default via IPaddress - to add a new default gateway.
ip route del default via IPaddress - to delete specific default gateway.
ip route del default - to delete default gateway.
__
*'Change the MAC address'
ip link set dev IntfName address NewMAC - to change the MAC address.

- - -
*'Add/delete the default gateway'
route add default gw IPaddress - to add new default gateway
route del default gw IP address - to delete default gateway

_________________________________________________________________
-----------------------------------------------------------------
#Setting Up Static IP(netplan)

*Netplan is the default configuration tool to manage networks.It uses yaml files that are located in /etc/netplan.

Netplan supports 2 renderers or backend services to control network interfaces.They are NetworkManager and Systemd-networkd.
The NetworkManager is mostly used on desktop machines while systemd-networkd is used on servers without a GUI.

The network interface can be managed either by network manager or by networkd, but not by both of them at the same time.

- - - - - - - - - - - - - - - - - - - - - - - - 
'NetworkManager' is a service that manages network interfaces on a Linux system.
systemctl stop NetworkManager - stop network manager.
systemctl disable NetworkManager - disables network manager, even after restarting the system.
systemctl is-enabled NetworkManager - to check if is enabled.

After stopping the NetworkManager, create a 'yaml' file in /etc/netplan (e.g. /01-netconfig.yaml).The text content in that file is:

'For manual IP and DNS addresses'
network:
	version: 2
	renderer: networkd 
	ethernets/wifis:
		IntfName:
			dhcp4: false
			addresses:
				- 192.168.0.20/24
			gateway4: "192.168.1.1"
			nameservers:
				addresses:
					- "8.8.8.8"
					- "8.8.4.4"

'OR for automatically IP and DNS addresses by DHCP server'		
network:
	version: 2
	renderer: networkd 
	ethernets/wifis:
		IntfName:
			dhcp4: true


After changes run "netplan apply".

renderer: while written 'networkd' , netplan applies it as systemd-networkd automatically.

_________________________________________________________________
-----------------------------------------------------------------
#Testing and Troubleshooting Network Connectivity

Ping works by sending ICMP echo request packets to the specified destination IP address and waits for a reply.When the destination receives an echo request packet, it will respond back with ICMP echo reply.Ping is also available on Mac and Windows , but with other options.
The domain name in ping can be different than the name that we pinged, because an IP address can be set to multiple different domain names` ping performs a reverse DNS resolution , asking the DNS server configured on the system , "what is the domain of that IP".The DNS server responds back with the first domain that finds, which differs from our input name.


ping [options] <destinationIP/domain name>
ping -n - To prevent ping from doing reverse DNS lookup.
ping -c N - To set the count of ICMP packets to be sent N times.
ping -i T - to set interval between each packet sending.by default it is 1s.Only superuser can send lower than 0.002s.
ping -q - display the summary only.

time=T ms(response time) -> time<30 means excellent, 50>time>30 means average, 100>time>50 means somehow slow and time>100 means slow response.
- - -
*Step 1 
ping DefaultGatewayIP -> If not working, then maybe not connected to AP.If working go to step 2

*Step 2
ping PublicIPAddress(e.g. DNS server) -> If not working, then maybe router is not properly connected or any issue with router.If working go to step 3

*Step 3
ping stableIPAddress(e.g. google.com) -> if not working, then you have a DNS issue.Check that you are using the correct DNS server and there's nothing that's filtering the packets and so on.Probably there's a configuration error related to DNS on you site or maybe the DNS server is down.

_________________________________________________________________
-----------------------------------------------------------------
#SSH

- - - - - -
#Using SSH

The most useful network protocol used for the remote management of servers, routers, switches or other networking devices.
SSH involves client and server.The SSH client creates a secure connection to the SSH server on a remote machine, and then the connection will be used to execute commands on the server.

!It is better to check the network connection between the ssh client and the server using ping.
-
If not installed run "sudo apt install openssh-server openssh-clients"
systemctl status ssh - to check if started or stopped.
systemctl is-enabled ssh - display enabled/disable (for boot)
systemctl start/stop ssh - to enable or disable.
-
ssh remoteLoginName@remoteIP - to connect to ssh server.
ssh -l remoteLoginName remoteIP - longer variant.
ssh -p N - to set another port number than the default (22).
-

When connecting to ssh server of remote machine, the first thing is displayed is RSA key fingerprint is SHA256:ASDFE9d/rrJB84rk something like this.Because it uses a client uses a cryptographic fingerprint to identify the server and prevent possible MITM attacks in the future.
The "ASDFE9d/rrJB84r" hostkey is randomly generated when the ssh server is set up and is used to identify the server you are connecting to.It will be saved on the client in a file "~/.ssh/known_hosts".
To quit ssh connection run "exit or ctrl+d".
The SSH client has its own configuration file "/etc/ssh/ssh_config"

- - INFO
To connect to metasploitable - ssh -o HostKeyAlgorithms=+ssh-rsa  msfadmin@IP. because it used old ssh service.To run ssh on metasploitable run "sudo /etc/init.d/ssh start".and can check it by "pgrep".

To run ssh server on windows , download PuTTY program from web.
- -

- - - - - -
#Troubleshooting SSH

- - 
* Problem 1
If you cannot connect to SSH server, the first thing you should do is to check that the SSH deamon (sshd) is running on the server machine.
systemctl status ssh - to see sshd status.
systemctl start ssh - to start sshd.
systemctl restart ssh - to restart sshd.
systemctl stop ssh - to stop sshd.
- -
* Problem 2
If you receive an error like "WARNING: REMOTE HOST  IDENTIFICATION HAS CHANGED!, IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!", then you should check that you are connecting to the right server.
This message can be displayed if, for example, the IP or MAC address of the server have changed.
If it's the right server, then you can prevent the message by removing the server key from the "~/.ssh/known_hosts" file.After this while connecting to ssh server of remote host, it can again prompt about key fingerprint "yes/no/[fingerprint]".
- -
* Problem 3
If problem still exists , check if the Port 22 , on which the server listens , is open with "telnet or nmap".If telnet is not installed , run "sudo apt install telnet".
telnet IPaddress 22 - if runs , means that port 22 is open.
nmap IPaddress -p 22 - same with nmap tool.If shows down , then -> namp IPaddress -p 22 -Pn
- -
* Problem 4
If the port is closed, but the ssh deamon is running on the server, then you should check if there isn't a firewall on the server, that's dropping the packets.
The Linux firewall is called "iptables" which is a command-line tool used to manage Netfilter(the actual firewall framework inside the Linux kernel) rules.
iptables -vnL - to check if there are any firewall rules.Check if the policy set to ACCEPT, and there are not any firewall rules about that.
-
The 'ufw' is uncomplicated user-friendly front-end program for iptables, used for managing netfilter firewall. 
An example that proofs that it's easier - "ufw allow ssh" equal to "iptables -A INPUT -p tcp -dport 22 -j ACCEPT".

sudo ufw status verbose - to check if it is.
sudo ufw enable/disable - to enable/disable it on system startup.
sudo ufw app list - to list all application profiles available on your server.
sudo ufw allow ssh - to configure ufw firewall to allow incoming ssh connections.
- -
* Problem 5
If there isn't a firewall problem but you still cannot connect , then you can run the ssh client is verbose mode.
ssh -v login@IP - runs in verbose mode by , causing ssh to print debugging messages about its progress.
ssh -vv login@IP - more verbose.
- -
* Problem 6
If the problem still exists , check the server logs.
sudo tail -f /var/log/auth.log , and run ssh connection and watch the logs/problems in real time.

- - - - - -
#Securing SSH